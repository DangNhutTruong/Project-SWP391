/**
 * Script ƒë∆°n gi·∫£n ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu v√† c·∫•u tr√∫c b·∫£ng users
 */
import { pool } from '../config/database.js';
import dotenv from 'dotenv';

dotenv.config();

async function checkConnection() {
  try {
    console.log('üîç Ki·ªÉm tra k·∫øt n·ªëi database...');

    // Ki·ªÉm tra k·∫øt n·ªëi
    const [result] = await pool.execute('SELECT 1');
    console.log('‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!');
    
    // Ki·ªÉm tra b·∫£ng users
    console.log('\nüîç Ki·ªÉm tra b·∫£ng users...');
    try {
      const [columns] = await pool.execute('DESCRIBE users');
      console.log('‚úÖ C·∫•u tr√∫c b·∫£ng users:');
      console.table(columns);
      
      // Ki·ªÉm tra users
      const [users] = await pool.execute('SELECT id, email, name, role FROM users LIMIT 5');
      console.log(`\n‚úÖ T√¨m th·∫•y ${users.length} ng∆∞·ªùi d√πng:`);
      console.table(users);
    } catch (error) {
      console.error('‚ùå Kh√¥ng th·ªÉ truy v·∫•n b·∫£ng users:', error.message);
    }
    
    // Ki·ªÉm tra JWT_SECRET
    console.log('\nüîë JWT Secret:', 
      process.env.JWT_SECRET 
        ? `ƒê√£ thi·∫øt l·∫≠p (${process.env.JWT_SECRET.substring(0, 3)}...)`
        : 'KH√îNG T√åM TH·∫§Y - s·ª≠ d·ª•ng gi√° tr·ªã m·∫∑c ƒë·ªãnh');

  } catch (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi database:', error);
  } finally {
    await pool.end();
  }
}

checkConnection();
