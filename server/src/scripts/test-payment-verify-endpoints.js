import fetch from 'node-fetch';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

// API base URL
const API_BASE_URL = process.env.API_URL || 'http://localhost:5000/api';

/**
 * Ki·ªÉm tra API x√°c minh thanh to√°n m·ªõi (/api/payments/verify)
 */
async function testVerifyPaymentAPI() {
  console.log('\nüß™ Ki·ªÉm tra API x√°c minh thanh to√°n m·ªõi (POST /api/payments/verify)');
  
  try {
    // D·ªØ li·ªáu ki·ªÉm tra
    const testPaymentData = {
      transactionId: 'MOM' + Date.now(),
      paymentStatus: 'completed',
      paymentMethod: 'momo',
      amount: 99000,
      signature: 'test-signature',
      paymentDetails: {
        orderId: 'ORDER' + Date.now(),
        paymentTime: new Date().toISOString()
      }
    };
    
    console.log('üìù D·ªØ li·ªáu g·ª≠i ƒëi:', JSON.stringify(testPaymentData, null, 2));
    
    // T·∫°o payment record th√¥ng qua endpoint c≈© (c·∫ßn c√≥ token)
    console.log('\nüì° B∆∞·ªõc 1: G·ªçi API x√°c minh thanh to√°n m·ªõi');
    const response = await fetch(`${API_BASE_URL}/payments/verify`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testPaymentData)
    });
    
    const result = await response.json();
    
    console.log(`üî¢ HTTP Status: ${response.status}`);
    console.log('üìä K·∫øt qu·∫£:', JSON.stringify(result, null, 2));
    
    if (result.success) {
      console.log('‚úÖ API x√°c minh thanh to√°n m·ªõi ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng!');
    } else {
      console.error('‚ùå API x√°c minh thanh to√°n m·ªõi g·∫∑p l·ªói:', result.message || 'Unknown error');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra API x√°c minh thanh to√°n:', error.message);
  }
}

/**
 * Ki·ªÉm tra API x√°c minh thanh to√°n c≈© (/api/payments/callback/verify) ƒë·ªÉ so s√°nh
 */
async function testCallbackVerifyAPI() {
  console.log('\nüß™ Ki·ªÉm tra API x√°c minh thanh to√°n c≈© (POST /api/payments/callback/verify)');
  
  try {
    // D·ªØ li·ªáu ki·ªÉm tra
    const testPaymentData = {
      transactionId: 'MOM' + Date.now(),
      paymentStatus: 'completed',
      paymentMethod: 'momo',
      amount: 99000,
      signature: 'test-signature',
      paymentDetails: {
        orderId: 'ORDER' + Date.now(),
        paymentTime: new Date().toISOString()
      }
    };
    
    console.log('üìù D·ªØ li·ªáu g·ª≠i ƒëi:', JSON.stringify(testPaymentData, null, 2));
    
    // G·ªçi API x√°c minh thanh to√°n c≈©
    console.log('\nüì° B∆∞·ªõc 1: G·ªçi API x√°c minh thanh to√°n c≈©');
    const response = await fetch(`${API_BASE_URL}/payments/callback/verify`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testPaymentData)
    });
    
    const result = await response.json();
    
    console.log(`üî¢ HTTP Status: ${response.status}`);
    console.log('üìä K·∫øt qu·∫£:', JSON.stringify(result, null, 2));
    
    if (result.success) {
      console.log('‚úÖ API x√°c minh thanh to√°n c≈© ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng!');
    } else {
      console.error('‚ùå API x√°c minh thanh to√°n c≈© g·∫∑p l·ªói:', result.message || 'Unknown error');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra API x√°c minh thanh to√°n c≈©:', error.message);
  }
}

// Ch·∫°y c√°c ki·ªÉm tra
async function runTests() {
  // Ki·ªÉm tra API m·ªõi
  await testVerifyPaymentAPI();
  
  // Ki·ªÉm tra API c≈© ƒë·ªÉ so s√°nh
  await testCallbackVerifyAPI();
  
  // K·∫øt qu·∫£ t·ªïng quan
  console.log('\nüìä K·∫øt qu·∫£ t·ªïng quan:');
  console.log('1. ƒê√£ th√™m API m·ªõi POST /api/payments/verify');
  console.log('2. Gi·ªØ nguy√™n API c≈© POST /api/payments/callback/verify ƒë·ªÉ t∆∞∆°ng th√≠ch ng∆∞·ª£c');
  console.log('3. C·∫£ hai API ƒë·ªÅu tr·ªè ƒë·∫øn c√πng m·ªôt controller function');
}

runTests().catch(error => {
  console.error('‚ùå L·ªói khi ch·∫°y ki·ªÉm tra:', error);
  process.exit(1);
});
